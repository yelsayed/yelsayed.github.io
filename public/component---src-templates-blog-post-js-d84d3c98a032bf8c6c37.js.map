{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","socialData","social","previous","next","useEffect","document","getElementsByClassName","classList","add","frontmatter","description","excerpt","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","icon","faBackward","faForward"],"mappings":"2FAAA,4FAuEeA,UA7DU,SAAC,GAAwB,IAAD,IAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAU,UAAGR,EAAKK,KAAKC,oBAAb,aAAG,EAAwBG,OACnCC,EAAmBV,EAAnBU,SAAUC,EAASX,EAATW,KAMlB,OAJAC,qBAAU,WAAO,IAAD,EACP,UAAGC,SAASC,uBAAuB,6BAA6B,UAAhE,OAAG,EAAiEC,UAAUC,IAAI,mBAIzF,kBAAC,IAAD,CAAQf,SAAUA,EAAUQ,OAAQD,EAAYD,MAAOH,GACrD,kBAAC,IAAD,CACEG,MAAOL,EAAKe,YAAYV,MACxBW,YAAahB,EAAKe,YAAYC,aAAehB,EAAKiB,UAEpD,6BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,gCACE,wBAAIC,SAAS,YAAYrB,EAAKe,YAAYV,OAC1C,2BAAIL,EAAKe,YAAYO,OAEvB,6BACEC,wBAAyB,CAAEC,OAAQxB,EAAKyB,MACxCJ,SAAS,gBAEX,8BAEF,yBAAKH,UAAU,iBACb,wBACEQ,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,wBAAIb,UAAU,iBACXV,GACC,kBAAC,OAAD,CAAMwB,GAAIxB,EAASyB,OAAOC,KAAMC,IAAI,QAClC,kBAAC,IAAD,CAAiBC,KAAMC,MADzB,IACwC7B,EAASO,YAAYV,QAIjE,wBAAIa,UAAU,iBACXT,GACC,kBAAC,OAAD,CAAMuB,GAAIvB,EAAKwB,OAAOC,KAAMC,IAAI,QAC7B1B,EAAKM,YAAYV,MADpB,IAC2B,kBAAC,IAAD,CAAiB+B,KAAME","file":"component---src-templates-blog-post-js-d84d3c98a032bf8c6c37.js","sourcesContent":["import React, {useEffect} from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faForward, faBackward} from \"@fortawesome/free-solid-svg-icons\";\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const socialData = data.site.siteMetadata?.social\n  const { previous, next } = data\n\n  useEffect(() => {\n    const _ = document.getElementsByClassName('gatsby-resp-image-wrapper')[0]?.classList.add('header-image');\n  });\n\n  return (\n    <Layout location={location} social={socialData} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li className=\"more-articles\">\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                <FontAwesomeIcon icon={faBackward}/> {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li className=\"more-articles\">\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} <FontAwesomeIcon icon={faForward}/>\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title,\n        social {\n          twitter,\n          instagram,\n          medium,\n          email\n        }\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}